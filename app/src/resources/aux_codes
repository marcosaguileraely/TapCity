/*public void VolleyService(String URL, final JSONObject jsonObject){
        final ProgressDialog pDialog = new ProgressDialog(context);
        pDialog.setMessage("Creando denuncia...");
        pDialog.setCancelable(false);
        pDialog.show();

        final String se = JSONdata.toString();

        JsonObjectRequest jsonObjReq = new JsonObjectRequest(Request.Method.POST, URL, null,
                new Response.Listener<JSONObject>() {
                    @Override
                    public void onResponse(JSONObject response) {
                        Log.d("App", response.toString());
                        pDialog.hide();
                        Toast.makeText(context, "¡Reporte creado!", Toast.LENGTH_SHORT).show();
                    }
                }, new Response.ErrorListener() {

            @Override
            public void onErrorResponse(VolleyError error) {
                VolleyLog.d("App", "Error: " + error.getMessage());
                pDialog.hide();
                Toast.makeText(context, "No se completo la denuncia. Intente nuevamente.", Toast.LENGTH_SHORT).show();
            }
        }){
            // Passing some request headers
            @Override
            public Map<String, String> getHeaders() throws AuthFailureError {
                HashMap<String, String> headers = new HashMap<String, String>();
                headers.put("X-Parse-Application-Id", APP_KEY);
                headers.put("X-Parse-REST-API-Key", REST_API_KEY);
                headers.put("Accept", "application/json");
                headers.put("Content-Type", "application/json; charset=utf-8");
                return headers;
            }
            @Override
            protected Map<String, String> getParams(){
                Map<String, String>  params = new HashMap<String, String>();
                params.put("geoString", "c4");
                params.put("UserId", objId);
                params.put("autoPlate", "xzx345");
                params.put("comment", "c");
                params.put("type", "Negativo");
                params.put("location", "12");
                return params;
            }
        };
        VolleySingleton.getInstance(context).addToRequestQueue(jsonObjReq);
    }*/


    =============



public JSONObject dataParse(){
        JSONObject GeoPoint = new JSONObject();
        try {
            data.put("geoString", "Calle 167 a #5a-04 int 4 apto 404");
            data.put("UserId", objId);
            data.put("autoPlate", plate);
            data.put("comment", "Parece que si insertó");
            data.put("type", "Negativo");
            GeoPoint.put("__type", "GeoPoint");
            GeoPoint.put("latitude", latitude);
            GeoPoint.put("longitude", longitude);
            data.put("location", GeoPoint);

        } catch (JSONException e) {
            e.printStackTrace();
        }

        return GeoPoint;
    }